# ----------------------------------------------------------
#            Configuration file for a Temoa Run
# Allows specification of run type and associated parameters
# ----------------------------------------------------------
#
# For toml format info see: https://toml.io/en/
#   - comments may be added with hash
#   - do NOT comment out table names in brackets like:  [<table>]

# Scenario Name (Mandatory)
# This scenario name is used to label results within the output .sqlite file
scenario = "test run 777"

# Scenaio Mode (Mandatory)
# See documentation for explanations.  A standard single run is "perfect foresight"
# mode must be one of (case-insensitive):
#     [perfect_foresight, MGA, myopic, method_of_morris, build_only, check]
scenario_mode = "perfect_foresight"

# Input file (Mandatory)
input_file = "data_files/temoa_utopia.sqlite"

# Output file (Mandatory)
# The output file must be an existing .sqlite file
# the user may target the same input file or a separate /
# copied sqlite file in a different location
output_database = "output_files/temoa_utopia.sqlite"

# ------------------------------------
#        DATA / MODEL CHECKS
#  To check data / cost integrity
# ------------------------------------

# Check the pricing structure for common errors, which are reported in the log file
# Strongly recommended
price_check = true

# Check the network connectivity for processes in the model.  Strongly
# recommended to ensure proper performance.  Results are reported in log file
# temp note:  This requires that source commodities be marked with 's'
source_check = true

# Produce HTML files for Commodity Networks.  Requires source_check above
plot_commodity_network = true

# ------------------------------------
#             SOLVER
#        Solver Selection
# ------------------------------------

# use the NEOS server to solve.  (Currently NOT supported)
neos = false

# solver (Mandatory)
solver_name = "cbc"

# ------------------------------------
#             OUTPUTS
# select desired output products/files
# ------------------------------------

# streaming output will stream the results in string format to the std output stream
# when running in "perfect foresight" only.
# This should probably only be used for "small" models
stream_output = true

# generate an Excel file in the output_files folder
save_excel = true

# save the duals in the output .sqlite database
save_duals = true

# save a copy of the pyomo-generated lp file to the outputs folder (maybe a large file!)
save_lp_file = false

# ---------------------------------------------------
#                   MODE OPTIONS
# options below are mode-specific and will be ignored
# if the run is not executed in that mode.
# ---------------------------------------------------
[MGA]
slack = 0.1
iterations = 4
weight = "integer"   # currently supported: [integer, normalized]

[myopic]
view_depth = 2  # number of periods seen/analyzed per iteration
step_size = 1    # number of periods to step by




